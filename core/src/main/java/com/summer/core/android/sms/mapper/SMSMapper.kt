package com.summer.core.android.sms.mapper

import android.database.Cursor
import com.summer.core.android.sms.constants.SMSColumnNames
import com.summer.core.data.local.entities.SMSEntity

object SMSMapper {

    val projection = arrayOf(
        SMSColumnNames.COLUMN_ID,
        SMSColumnNames.COLUMN_ADDRESS,
        SMSColumnNames.COLUMN_BODY,
        SMSColumnNames.COLUMN_DATE,
        SMSColumnNames.COLUMN_DATE_SENT,
        SMSColumnNames.COLUMN_TYPE,
        SMSColumnNames.COLUMN_THREAD_ID,
        SMSColumnNames.COLUMN_STATUS,
        SMSColumnNames.COLUMN_SERVICE_CENTER,
        SMSColumnNames.COLUMN_LOCKED,
        SMSColumnNames.COLUMN_PERSON
    )

    fun mapCursorToSmsList(cursor: Cursor?): List<SMSEntity> {
        val smsList = mutableListOf<SMSEntity>()

        cursor?.use {
            while (it.moveToNext()) {
                val sms = SMSEntity(
                    id = 0, // Auto-generated by Room
                    androidSMSId = it.getInt(it.getColumnIndexOrThrow(SMSColumnNames.COLUMN_ID)),
                    address = it.getString(it.getColumnIndexOrThrow(SMSColumnNames.COLUMN_ADDRESS))
                        ?: "",
                    body = it.getString(it.getColumnIndexOrThrow(SMSColumnNames.COLUMN_BODY)) ?: "",
                    date = it.getLong(it.getColumnIndexOrThrow(SMSColumnNames.COLUMN_DATE)),
                    dateSent = it.getLong(it.getColumnIndexOrThrow(SMSColumnNames.COLUMN_DATE_SENT)),
                    type = it.getInt(it.getColumnIndexOrThrow(SMSColumnNames.COLUMN_TYPE)),
                    threadId = it.getInt(it.getColumnIndexOrThrow(SMSColumnNames.COLUMN_THREAD_ID)),
                    read = 0, // Default value (can be fetched if needed)
                    status = it.getInt(it.getColumnIndexOrThrow(SMSColumnNames.COLUMN_STATUS)),
                    serviceCenter = it.getString(it.getColumnIndexOrThrow(SMSColumnNames.COLUMN_SERVICE_CENTER)),
                    subscriptionId = null, // Can be added if needed,
                    classification = null,
                    confidenceScore = null,
                    createdAtApp = System.currentTimeMillis(),
                    updatedAtApp = System.currentTimeMillis()
                )
                smsList.add(sms)
            }
        }
        return smsList
    }
}